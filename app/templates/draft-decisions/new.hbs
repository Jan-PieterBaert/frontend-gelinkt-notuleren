<AppChrome @documentType="draftDecisions" @editorDocument={{this.editorDocument}} @documentContainer={{this.documentContainer}} @save={{action "save"}} />

{{#if this.validationErrors}}
  <WuModal @title="Er zijn fouten bij de validatie" @onClose={{action "closeValidationModal"}} as |m|>
    <m.content>
      Gelieve een titel op te geven.
    </m.content>
    <m.buttons as |b|>
      <b.button @label="OK" @onClick={{action "closeValidationModal"}} />
    </m.buttons>
  </WuModal>
{{/if}}

{{#if this.saveAndTransitionToEditMode.isRunning}}
  <div class="editor-container container-flex--scroll">
    <div class="editor">
      <div class="grid grid--align-center">
        <div class="col--7-12">
          <div class="au-c-rdfa-scanner say-content rdfa-annotations scanner">
            <div class="scanner__text">
              <div class="badge badge--l badge--initials">
                <span class="loader"><span class="u-visually-hidden">Aan het verwerken</span></span>
              </div>
              <h3 class="h3">Bezig met opslaan</h3>
            </div>

            <span class="scanner__bar"></span>
            {{htmlSafe this.editor.htmlContent}}
          </div>
        </div>
      </div>
    </div>
  </div>
{{else}}
  {{!--
     We don't want to rerender this component after having saved.
     If it rerenders, while in transition to another route (edit-route), we have errors.
     The component rerenders, the rdfa-editor-compoment rerenders too, it has async initialisation logic,
     which works on an inconsistent state.
   --}}
  {{#unless this.hasPerformedSaveAndTransitionToEditModeTask}}
    <RdfaEditorContainer
      @profile={{this.profile}}
      @editorDocument={{this.editorDocument}}
      @rdfaEditorContainerInit={{action "handleRdfaEditorInit"}}
      @onUpdateTasklists={{action "updateTasklists"}}
      @typeOfWrappingDiv="besluit:BehandelingVanAgendapunt ext:draftDecision"
      @showToggleRdfaAnnotations={{true}}
    />
  {{/unless}}
{{/if}}
{{outlet}}
